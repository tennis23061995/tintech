{"version":3,"sources":["../../src/core/think_cache.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;AAIA,OAAO,UAAP,GAAoB,UAAC,IAAD,EAAO,IAAP,EAAa,KAAb,EAAuB;AACzC,eAAW,IAAX;AACA,MAAI,CAAC,WAAW,IAAX,CAAL,EAAuB;AACrB,eAAW,IAAX,IAAmB,EAAnB;AACD;AACD;AACA,MAAI,SAAS,SAAb,EAAwB;AACtB,WAAO,WAAW,IAAX,CAAP;AACD;AACD;AACA,MAAG,SAAS,IAAZ,EAAiB;AACf,eAAW,IAAX,IAAmB,EAAnB;AACA;AACD;AACD;AACA,MAAI,UAAU,SAAd,EAAyB;AACvB,QAAI,MAAM,QAAN,CAAe,IAAf,CAAJ,EAA0B;AACxB,aAAO,WAAW,IAAX,EAAiB,IAAjB,CAAP;AACD;AACD,eAAW,IAAX,IAAmB,IAAnB;AACA;AACD;AACD;AACA,MAAI,UAAU,IAAd,EAAoB;AAClB,WAAO,WAAW,IAAX,EAAiB,IAAjB,CAAP;AACA;AACD;AACD;AACA,aAAW,IAAX,EAAiB,IAAjB,IAAyB,KAAzB;AACD,CA7BD;AA8BA;;;;AAIA;;;;AAIA,WAAW,MAAX,GAAoB,QAApB;AACA;;;;AAIA,WAAW,IAAX,GAAkB,MAAlB;AACA;;;;AAIA,WAAW,YAAX,GAA0B,cAA1B;AACA;;;;AAIA,WAAW,EAAX,GAAgB,IAAhB;AACA;;;;AAIA,WAAW,KAAX,GAAmB,OAAnB;AACA;;;;AAIA,WAAW,OAAX,GAAqB,SAArB;AACA;;;;AAIA,WAAW,KAAX,GAAmB,OAAnB;AACA;;;;AAIA,WAAW,QAAX,GAAsB,UAAtB;AACA;;;;AAIA,WAAW,KAAX,GAAmB,OAAnB;AACA;;;;AAIA,WAAW,WAAX,GAAyB,aAAzB;AACA;;;;AAIA,WAAW,UAAX,GAAwB,YAAxB;AACA;;;;AAIA,WAAW,SAAX,GAAuB,WAAvB;AACA;;;;AAIA,WAAW,KAAX,GAAmB,OAAnB;AACA;;;;AAIA,WAAW,GAAX,GAAiB,KAAjB","file":"think_cache.js","sourcesContent":["'use strict';\n\n/**\n * global memory cache\n * @type {Object}\n */\nglobal.thinkCache = (type, name, value) => {\n  type = `_${type}`;\n  if (!thinkCache[type]) {\n    thinkCache[type] = {};\n  }\n  // get cache\n  if (name === undefined) {\n    return thinkCache[type];\n  }\n  //remove cache\n  if(name === null){\n    thinkCache[type] = {};\n    return;\n  }\n  // get cache\n  if (value === undefined) {\n    if (think.isString(name)) {\n      return thinkCache[type][name];\n    }\n    thinkCache[type] = name;\n    return;\n  }\n  //remove cache\n  if (value === null) {\n    delete thinkCache[type][name];\n    return;\n  }\n  //set cache\n  thinkCache[type][name] = value;\n};\n/**\n * cache type\n * @type {String}\n */\n/**\n * memory cache\n * @type {String}\n */\nthinkCache.MEMORY = 'memory';\n/**\n * store controller/action template file\n * @type {String}\n */\nthinkCache.VIEW = 'view';\n/**\n * store view content\n * @type {String}\n */\nthinkCache.VIEW_CONTENT = 'view_content';\n/**\n * store db instance\n * @type {String}\n */\nthinkCache.DB = 'db';\n/**\n * store table info\n * @type {String}\n */\nthinkCache.TABLE = 'table';\n/**\n * memory session\n * @type {String}\n */\nthinkCache.SESSION = 'session';\n/**\n * store redis instance\n * @type {String}\n */\nthinkCache.REDIS = 'redis';\n/**\n * store memcache instance\n * @type {String}\n */\nthinkCache.MEMCACHE = 'memcache';\n/**\n * think timer\n * @type {String}\n */\nthinkCache.TIMER = 'timer';\n/**\n * file auto reload\n * @type {String}\n */\nthinkCache.AUTO_RELOAD = 'auto_reload';\n/**\n * think collection class or function\n * @type {String}\n */\nthinkCache.COLLECTION = 'collection';\n/**\n * store websockets\n * @type {String}\n */\nthinkCache.WEBSOCKET = 'websocket';\n/**\n * store limit instance\n * @type {String}\n */\nthinkCache.LIMIT = 'limit';\n/**\n * app use\n * @type {String}\n */\nthinkCache.APP = 'app';"]}