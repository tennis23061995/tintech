{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\fileman.js"
    ],
    "names": [
        "serverRoot",
        "indexAction",
        "display",
        "getconfigAction",
        "success",
        "getlangAction",
        "langfile",
        "think",
        "post",
        "existsSync",
        "JSON",
        "parse",
        "readFileSync",
        "dirlistAction",
        "type",
        "get",
        "response",
        "filesRoot",
        "getDirectories",
        "generatethumbAction",
        "header",
        "join",
        "UPLOAD_PATH",
        "resize",
        "gravity",
        "crop",
        "stream",
        "pipe",
        "http",
        "res",
        "downloadAction",
        "download",
        "downloaddirAction",
        "basename",
        "archive",
        "bulk",
        "expand",
        "cwd",
        "src",
        "finalize",
        "copyAction",
        "oldPath",
        "newPath",
        "split",
        "length",
        "console",
        "log",
        "msg",
        "copySync",
        "moveAction",
        "moveSync",
        "createdirAction",
        "pathfolder",
        "mkdirSync",
        "deleteAction",
        "pa",
        "removeSync",
        "uploadAction",
        "file",
        "extend",
        "filepath",
        "path",
        "uploadPath",
        "renameSync",
        "isFile",
        "fileslistAction",
        "pathDir",
        "allimageext",
        "allvideoext",
        "readdirSync",
        "map",
        "ext",
        "extname",
        "indexOf",
        "fileDir",
        "info",
        "statSync",
        "size",
        "err",
        "push",
        "p",
        "replace",
        "s",
        "t",
        "mtime",
        "getTime",
        "toFixed",
        "w",
        "width",
        "h",
        "height",
        "renameAction",
        "name",
        "dir",
        "result",
        "lstatSync",
        "isDirectory",
        "filter",
        "forEach",
        "index",
        "srcpath",
        "f",
        "d"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\admin\\controller\\fileman.js",
    "sourcesContent": [
        "﻿'use strict';\n\nimport fs from \"fs\";\nimport fsextra from \"fs-extra\";\nimport path from \"path\";\nimport Base from './base.js';\nimport sizeOf from 'image-size';\nimport gm from 'gm';\nimport multer  from 'multer';\nimport archiver from 'archiver';\n\nvar serverRoot = './static/filemanager/';\n\nexport default class extends Base\n{\n    /**\n     * index action\n     * @return {Promise} []\n     */\n    async indexAction()\n    {\n        return this.display();\n    }\n    async getconfigAction()\n    {\n        return this.success({\n            \"FILES_ROOT\":          \"\",\n            \"RETURN_URL_PREFIX\":   \"\",\n            \"SESSION_PATH_KEY\":    \"\",\n            \"THUMBS_VIEW_WIDTH\":   \"140\",\n            \"THUMBS_VIEW_HEIGHT\":  \"120\",\n            \"PREVIEW_THUMB_WIDTH\": \"300\",\n            \"PREVIEW_THUMB_HEIGHT\":\"200\",\n            \"MAX_IMAGE_WIDTH\":     \"1000\",\n            \"MAX_IMAGE_HEIGHT\":    \"1000\",\n            \"INTEGRATION\":         \"ckeditor\",\n            \"DIRLIST\":             \"/admin/fileman/dirlist\",\n            \"CREATEDIR\":           \"/admin/fileman/createdir\",\n            \"DELETEDIR\":           \"/admin/fileman/delete\",\n            \"MOVEDIR\":             \"/admin/fileman/move\",\n            \"COPYDIR\":             \"/admin/fileman/copy\",\n            \"RENAMEDIR\":           \"/admin/fileman/rename\",\n            \"FILESLIST\":           \"/admin/fileman/fileslist\",\n            \"UPLOAD\":              \"/admin/fileman/upload\",\n            \"DOWNLOAD\":            \"/admin/fileman/download\",\n            \"DOWNLOADDIR\":         \"/admin/fileman/downloaddir\",\n            \"DELETEFILE\":          \"/admin/fileman/delete\",\n            \"MOVEFILE\":            \"/admin/fileman/move\",\n            \"COPYFILE\":            \"/admin/fileman/copy\",\n            \"RENAMEFILE\":          \"/admin/fileman/rename\",\n            \"GENERATETHUMB\":       \"/admin/fileman/generatethumb\",\n            \"DEFAULTVIEW\":         \"list\",\n            \"FORBIDDEN_UPLOADS\":   \"zip js jsp jsb mhtml mht xhtml xht php phtml php3 php4 php5 phps shtml jhtml pl sh py cgi exe application gadget hta cpl msc jar vb jse ws wsf wsc wsh ps1 ps2 psc1 psc2 msh msh1 msh2 inf reg scf msp scr dll msi vbs bat com pif cmd vxd cpl htpasswd htaccess\",\n            \"ALLOWED_UPLOADS\":     \"\",\n            \"FILEPERMISSIONS\":     \"0644\",\n            \"DIRPERMISSIONS\":      \"0755\",\n            \"LANG\":                \"auto\",\n            \"DATEFORMAT\":          \"dd/MM/yyyy HH:mm\",\n            \"OPEN_LAST_DIR\":       \"yes\"\n        });\n    }\n    async getlangAction()\n    {\n        let langfile=think.serverRoot+\"/filemanager/lang/\"+this.post(\"lang\")+\".json\"\n        if(fs.existsSync(langfile))\n        {\n            return this.success(JSON.parse(fs.readFileSync(langfile, 'utf8')));\r\n        }\n        return this.success({});\n    }\n    async dirlistAction()\n    {\n        var type=this.get('type');\n        var response = [];\n        var filesRoot = 'pics';\n\n        getDirectories(filesRoot,type, response);\n        return this.success(response);\n    }\n    async generatethumbAction()\n    {\n        this.header(\"content-type\", \"image/png\");\n        gm(path.join(think.UPLOAD_PATH, this.get('f')))\n         .resize(this.get('width') || '200', this.get('height') || '200', '^')\n         .gravity('Center')\n         .crop(this.get('width') || '200', this.get('height') || '200')\n         .stream('png')\n         .pipe(this.http.res);\n    }\n    async downloadAction()\n    {\n        this.download(path.join(think.UPLOAD_PATH, this.get('f')));\n    }\n    async downloaddirAction()\n    {\n        this.header('Content-disposition', 'attachment; filename=' + path.basename(this.get('d')) + '.zip');\n\n        var archive = archiver('zip');\n        archive.pipe(this.http.res);\n        archive.bulk([\n          { expand: true, cwd: path.join(think.UPLOAD_PATH, this.get('d')), src: ['**/*'] }\n        ]);\n        archive.finalize();\n    }\n    async copyAction()\n    {\n        try{\n            var oldPath=path.join(think.UPLOAD_PATH,this.post('f') || this.post('d'));\n            var newPath=path.join(think.UPLOAD_PATH, this.post('n'),this.post('d').split('/')[this.post('d').split('/').length-1]||this.post('f').split('/')[this.post('f').split('/').length-1]);\n            console.log(oldPath)\n            console.log(newPath)\n            if(fs.existsSync(newPath)){\n                return this.success({ res: \"ok\", msg: \"Đã tồn tại\" });\n            }\n            else\n            {\n                fsextra.copySync(oldPath,newPath);\n                return this.success({ res: \"ok\", msg: \"Success\" });\n            }\n        }\n        catch (err) {\n            return this.success({ res:\"error\", msg: \"Có lỗi xảy ra\" });\n        }\n    }\n    async moveAction()\n    {\n        try\n        {\n            var oldPath=path.join(think.UPLOAD_PATH,this.post('f') || this.post('d'));\n            var newPath=path.join(think.UPLOAD_PATH, this.post('n'),this.post('d').split('/')[this.post('d').split('/').length-1]);\r\n            console.log(oldPath);\r\n            console.log(newPath);\r\n            if(fs.existsSync(newPath)){\n                return this.success({ res: \"ok\", msg: \"Đã tồn tại\" });\n            }\r\n            else\r\n            {\r\n                fsextra.moveSync(oldPath,newPath);\r\n                return this.success({ res: \"ok\", msg: \"Success\" });\r\n            }\r\n        }\n        catch (err) {\n            return this.success({ res:\"error\", msg: \"Có lỗi xảy ra\" });\n        }\n        //var result=true;\n        //fs.readFile(oldPath , function(err, data) {\r\n        //    fs.writeFile(newPath, data, function(err) {\r\n        //        fs.unlink(oldPath, function(){\r\n        //            if (err) {\n        //                result=false;\n        //            }\r\n        //        });\r\n        //    });\r\n        //});\n        //if (result) {\n        //    return this.success({ res: \"ok\", msg: \"Success\" });\n        //}\n        //else{\n        //    return this.success({ res:\"error\", msg: \"Thất bại\" });\n        //}\n        //fs.moveSync(path.join(think.UPLOAD_PATH,this.post('f') || this.post('d')), path.join(think.UPLOAD_PATH, this.post('n')), function (err) {\n        //    if (err) {\n        //        return this.success({ res:\"error\", msg: err });\n        //    }\n        //    else{\n        //        return this.success({ res: \"ok\", msg: \"Success\" });\n        //    }\n        //});\n    }\n    async createdirAction()\n    {\n        let pathfolder=path.join(think.UPLOAD_PATH, this.post('d'), this.post('n'));\n        try {\n            if(!fs.existsSync(pathfolder)){\n                fs.mkdirSync(path.join(think.UPLOAD_PATH, this.post('d'), this.post('n')));\n                return this.success({ res: \"ok\", msg: \"Success\" });\r\n            }\n            else\n            {\n                return this.success({ res:\"error\", msg: \"Folder đã tồn tại\" });\r\n            }\n        } catch (err) {\n            return this.success({ res:\"error\", msg: \"Có lỗi xảy ra\" });\n        }\n    }\n    async deleteAction()\n    {\n        try {\n            var pa=path.join(think.UPLOAD_PATH, this.post('f') || this.post('d'));\n            console.log(pa);\n            fsextra.removeSync(pa);\n            //if(fs.lstatSync(pa).isDirectory())\n            //{\n            //    console.log(\"folder\")\n            //    fs.readdirSync(pa).forEach(function(file,index){\r\n            //        var curPath = pa + \"/\" + file;\r\n            //        if(fs.lstatSync(curPath).isDirectory()) { // recurse\r\n            //            deleteFolderRecursive(curPath);\r\n            //        } else { // delete file\r\n            //            fs.unlinkSync(curPath);\r\n            //        }\r\n            //    });\r\n            //    fs.rmdirSync(pa);\n            //}\n            //else\n            //{\n            //    console.log(\"file\")\n            //    fs.unlinkSync(pa)\r\n            //}\n            return this.success({ res: \"ok\", msg: \"Success\" });\n        } catch (err) {\n           return this.success({ res:\"error\", msg: \"Có lỗi xảy ra\" });\n        }\n    }\n\n    async uploadAction()\n    {\n        try\n        {\n            var file = think.extend({}, this.file('files[]'));\n            var filepath = file.path;\n            var uploadPath = path.join(think.UPLOAD_PATH, this.post('d'));\r\n            var basename = path.basename(filepath);\r\n            fs.renameSync(filepath, uploadPath + '/' + basename);\r\n\r\n            file.path = uploadPath + '/' + basename;\r\n\r\n            if(think.isFile(file.path)){\r\n                return this.success({ res: \"ok\", msg: \"Success\" });\r\n            }\n            return this.success({ res: \"error\", msg: \"Thất bại\" });\n        } catch (err) {\n            return this.success({ res:\"error\", msg: \"Có lỗi xảy ra\" });\n        }\n\n    }\n    async fileslistAction()\n    {\n        var type=this.post('type');\n        var response = [];\n        var pa=this.post('d');\n        var pathDir = path.join(think.UPLOAD_PATH, pa);\n        console.log(pa);\n        var allimageext=[\".jpg\",\".bmp\",\".gif\",\".png\",\".jpeg\"];\n        var allvideoext=[\".mp4\"];\n        fs.readdirSync(pathDir).map(function(file) {\n            if(type==\"image\")\n            {\n                var ext = path.extname(file);\n                if(allimageext.indexOf(ext)>-1)\n                {\n                    var fileDir = path.join(pathDir, file);\n                    var info = fs.statSync(fileDir);\n                    if(info.isFile()){\n                        var size = null;\n                        try { size = sizeOf(fileDir); } catch(err) { size = {}; }\n                        response.push({\n                            p: path.join(pa, file).replace(/\\\\/g, '/'),\n                            s: info.size,\n                            t: (info.mtime.getTime() / 1000).toFixed(0),\n                            w: size.width,\n                            h: size.height\n                        });\n                    }\r\n                }\n            }\n            else if(type==\"video\")\n            {\n                var ext = path.extname(file);\n                if(allvideoext.indexOf(ext)>-1)\n                {\n                    var fileDir = path.join(pathDir, file);\n                    var info = fs.statSync(fileDir);\n                    if(info.isFile()){\n                        var size = null;\n                        try { size = sizeOf(fileDir); } catch(err) { size = {}; }\n                        response.push({\n                            p: path.join(pa, file).replace(/\\\\/g, '/'),\n                            s: info.size,\n                            t: (info.mtime.getTime() / 1000).toFixed(0),\n                            w: size.width,\n                            h: size.height\n                        });\n                    }\r\n                }\r\n            }\n        });\n\n        return this.success(response);\n    }\n    async renameAction()\n    {\n        var pa=path.join(think.UPLOAD_PATH, this.post('f') || this.post('d'))\n\n        var name=this.post('n');\n        try {\n            var dir= this.post('d').split(\"/\")[(this.post('d').split(\"/\").length-1)];\n            var result=false;\n            console.log(dir);\n            if(fs.lstatSync(pa).isDirectory())\n            {\n                fs.readdirSync(pa+\"/..\")\r\n        .filter(file => fs.statSync(path.join(pa+\"/..\", file)).isDirectory()).forEach(function(file,index){\n            if(file==name && file!=dir)\n            {\n               result=true;\r\n            }\n        });\n            }\n            else\n            {\n                fs.readdirSync(pa+\"/..\")\r\n        .filter(file => fs.statSync(path.join(pa+\"/..\", file)).isFile()).forEach(function(file,index){\n            if(file==name && file!=dir)\n            {\n                result=true;\r\n            }\n        });\r\n            }\n            if(result)\n            {\n                return this.success({ res:\"error\", msg: \"Tên đã tồn tại\" });\r\n            }\n            else\n            {\n                fs.renameSync(pa, path.join(pa+\"/..\", name));\r\n            }\n           // fs.renameSync(path.join(serverRoot, req.body.f || req.body.d), path.join(serverRoot, pathDir, req.body.n));\n            return this.success({ res: \"ok\", msg: \"Success\" });\n        } catch (err) {\n            return this.success({ res:\"error\", msg: \"Có lỗi xảy ra\" });\n        }\n    }\n}\n//function copyFile(src, dest) {\r\n\r\n//    let readStream = fs.createReadStream(src);\r\n\r\n//    readStream.once('error', (err) => {\r\n//        console.log(err);\r\n//    });\r\n\r\n//    readStream.once('end', () => {\r\n//        console.log('done copying');\r\n//    });\r\n\r\n//    readStream.pipe(fs.createWriteStream(dest));\r\n//}\nvar getDirectories = function(srcpath,type, response) {\n\n    var info = {\n        p: srcpath.replace(/\\\\/g, '/'),\n        f: 0,\n        d: 0\n    };\n    response.push(info);\n    var allimageext=[\".jpg\",\".bmp\",\".gif\",\".png\",\".jpeg\"];\n    var allvideoext=[\".mp4\"];\n    let serverRoot = think.UPLOAD_PATH + '/';\n   // console.log(fs.existsSync(uploadPath))\n    fs.readdirSync(serverRoot + srcpath).map(function(file) {\n        var pathDir = path.join(srcpath, file);\n        if(fs.statSync(serverRoot + pathDir).isDirectory()){\n            info.d++;\n            getDirectories(pathDir,type, response);\n        }else{\n            var ext = path.extname(file);\n            if(type==\"image\" && allimageext.indexOf(ext)>-1)\n            {\n                info.f++;\n            }\n            else if(type==\"video\" && allvideoext.indexOf(ext)>-1)\n            {\n                info.f++;\n            }\n        }\n    });\n}\n"
    ]
}