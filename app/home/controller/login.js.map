{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\home\\controller\\login.js"
    ],
    "names": [
        "indexAction",
        "session",
        "uinfo",
        "think",
        "isEmpty",
        "redirect",
        "name",
        "assign",
        "displayView",
        "loginfacebookAction",
        "get",
        "token",
        "urlprofile",
        "doRequest",
        "resultuser",
        "newData",
        "JSON",
        "parse",
        "console",
        "log",
        "model",
        "findOne",
        "email",
        "_logic",
        "result",
        "uInfo",
        "pic",
        "nickname",
        "openid",
        "way",
        "userData",
        "id",
        "createtime",
        "datetime",
        "post",
        "addUser",
        "rs",
        "logingoogleAction",
        "dologinAction",
        "data",
        "code",
        "sysCode",
        "md5",
        "password",
        "md5Pas",
        "json",
        "status",
        "errno",
        "uname",
        "errmsg",
        "githubAction",
        "self",
        "GITHUB_CLIENT_ID",
        "GITHUB_CLIENT_SECRET",
        "formData",
        "client_id",
        "client_secret",
        "url",
        "form",
        "headers",
        "Accept",
        "err",
        "res1",
        "body",
        "access_token",
        "headers2",
        "qs",
        "res2",
        "info",
        "login",
        "qqloginAction",
        "QQ_CLIENT_ID",
        "QQ_CLIENT_SECRET",
        "REDIRECT_URI",
        "QQ_grant_type",
        "grant_type",
        "redirect_uri",
        "match",
        "oauth_consumer_key",
        "format",
        "completeAction",
        "DB_userinfo",
        "request",
        "require",
        "resolve",
        "reject",
        "error",
        "res",
        "statusCode"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\home\\controller\\login.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\nimport request from \"request\";\nexport default class extends Base {\n\n    //用户登录\n    async indexAction(){\n      let uinfo=await this.session('uInfo');\n      if(!think.isEmpty(uinfo)){\n        return this.redirect('/personal/@'+uinfo.name);\n      }else {\n        this.assign(\"title\",\"用户登录\");\n        return this.displayView(\"login_index\");\n\n      }\n    }\n      async loginfacebookAction(){\n        var token=await this.get(\"access_token\");\n        var urlprofile=\"https://graph.facebook.com/me?access_token=\"+token+\"&fields=email,name,first_name,last_name,link,birthday,cover,devices,gender\"\n        let resultuser = await doRequest(urlprofile);\n        let newData=JSON.parse(resultuser);\n        console.log(newData);\n        let result=await this.model('home').findOne('user',{email:newData.email,_logic: 'OR'});\n        if(!think.isEmpty(result))\n        {\n          let uInfo={\n              email:result.email,\n              pic:result.pic,\n              name:result.name,\n              nickname:result.nickname,\n              openid:'',\n              way:'site'\n            }\n          await this.session(\"uInfo\", uInfo);\n        }\n        else {\n          var userData={};\n          userData.name=newData.id;\n          userData.nickname=newData.name;\n          userData.email=newData.email;\n          userData.createtime=think.datetime(this.post('createtime'));\n          let rs=await this.model('home').addUser(userData);\n          let uInfo={\n              email:userData.email,\n              pic:'',\n              name:userData.name,\n              nickname:'',\n              openid:'',\n              way:'site'\n            }\n          await this.session(\"uInfo\", uInfo);\n        }\n        return this.redirect(await this.get(\"href\"));\n      }\n      async logingoogleAction(){\n        var token=await this.get(\"access_token\");\n        console.log(\"token\"+token)\n        var urlprofile=\"https://www.googleapis.com/oauth2/v1/userinfo?access_token=\"+token\n        let resultuser = await doRequest(urlprofile);\n        let newData=JSON.parse(resultuser);\n        let result=await this.model('home').findOne('user',{email:newData.email,_logic: 'OR'});\n        if(!think.isEmpty(result))\n        {\n          let uInfo={\n              email:result.email,\n              pic:result.pic,\n              name:result.name,\n              nickname:result.nickname,\n              openid:'',\n              way:'site'\n            }\n          await this.session(\"uInfo\", uInfo);\n        }\n        else {\n          var userData={};\n          userData.name=newData.id;\n          userData.nickname=newData.name;\n          userData.email=newData.email;\n          userData.createtime=think.datetime(this.post('createtime'));\n          let rs=await this.model('home').addUser(userData);\n          let uInfo={\n              email:userData.email,\n              pic:'',\n              name:userData.name,\n              nickname:'',\n              openid:'',\n              way:'site'\n            }\n          await this.session(\"uInfo\", uInfo);\n        }\n        return this.redirect(await this.get(\"href\"));\n      }\n    async dologinAction(){\n      let data=this.post();\n      let code=data.code;\n      let sysCode=await this.session('code');\n      // code=code.toLowerCase();\n      // sysCode=sysCode.toLowerCase();\n      let md5Pas = await think.md5(data.password);\n      let email = await data.email;\n      let result=await this.model('home').findOne('user',{email:email,name:email,_logic: 'OR'});\n      if((email===result.name || email===result.email)&&md5Pas===result.password){\n            let uInfo={\n                email:email,\n                pic:result.pic,\n                name:result.name,\n                nickname:result.nickname,\n                openid:'',\n                way:'site'\n              }\n            await this.session(\"uInfo\", uInfo);\n            return this.json({status:1,errno:0,uname:result.name,errmsg:\"登陆成功!\"});\n      }else{\n          return this.json({status:0,errno:1,errmsg:\"Đăng nhập thất bại!\"});\n      }\n    }\n\n    async githubAction(){\n        let self=this;\n        let GITHUB_CLIENT_ID=\"776342f65de13d9b3df4\",\n            GITHUB_CLIENT_SECRET=\"080784f5209b1dc0d934e66eeab8013c4e68735c\";\n\n        let code=await this.get('code');\n        let formData = {\n          client_id: GITHUB_CLIENT_ID,\n          client_secret: GITHUB_CLIENT_SECRET,\n          code: code\n        };\n\n        request.post({\n            url: 'https://github.com/login/oauth/access_token',\n            form: formData,\n            headers: {Accept: 'application/json'}\n          }, function (err, res1, body) {\n\n            var access_token = JSON.parse(body).access_token;\n            var headers2 = {\n              'User-Agent': 'Awesome-Octocat-App'\n            };\n            request.get({\n              url: 'https://api.github.com/user',\n              qs: {access_token: access_token},\n              headers: headers2\n            }, function (err, res2, body) {\n            let info = JSON.parse(body);\n            let uInfo={\n                email:info.email,\n                pic:'',\n                name:'',\n                nickname:info.login,\n                openid:info.id,\n                way:'github'\n              }\n              self.session(\"uInfo\",uInfo);\n              self.redirect(\"/login/complete\");\n            });\n        });\n    }\n    async qqloginAction(){\n        let self=this;\n\n        let QQ_CLIENT_ID = \"101334443\";\n        let QQ_CLIENT_SECRET = \"ace474e949764ac84a9faeb8f99ae4c6\";\n        let REDIRECT_URI = \"http://www.jsout.com/login/qqlogin\";\n        let QQ_grant_type = \"authorization_code\";\n        //注意:回填地址, 因为QQ不允许像github一样填http://127.0.0.1:3000的开发者模式,\n        // https://graph.qq.com/oauth2.0/authorize?redirect_uri=' + REDIRECT_URI + '&response_type=code&client_id=' + QQ_CLIENT_ID\n\n        let code=await this.get('code');\n        let qs = {\n              grant_type: 'authorization_code',\n              client_id: QQ_CLIENT_ID,\n              client_secret: QQ_CLIENT_SECRET,\n              code: code,\n              redirect_uri: REDIRECT_URI\n            };\n        request.get({\n            url: 'https://graph.qq.com/oauth2.0/token',\n            qs: qs\n          }, function (err, res1, body) {\n            let access_token = body.match(/access_token=(\\w+)&?/)[1];\n            request.get({\n              url: 'https://graph.qq.com/oauth2.0/me',\n              qs: {access_token: access_token}\n            }, function (err, res2, body) {\n                  let openid = body.match(/\"openid\":\"(\\w+)\"/)[1];\n                  let qs = {\n                    oauth_consumer_key: QQ_CLIENT_ID,\n                    access_token: access_token,\n                    openid: openid,\n                    format: 'json'\n                  };\n                  // 获取用户信息\n                    request.get({\n                        url: 'https://graph.qq.com/user/get_user_info',\n                        qs: qs\n                        }, function (err, res2, body) {\n                        let info = JSON.parse(body);\n                        let uInfo={\n                            email:'',\n                            pic:'',\n                            name:'',\n                            nickname:info.nickname,\n                            openid:openid,\n                            way:'qq'\n                          }\n                          self.session(\"uInfo\",uInfo);\n                          self.redirect(\"/login/complete\");\n                  });\n              });\n        });\n    }\n\n    async completeAction(){\n      this.assign('title','完善资料')\n      let uinfo=await this.session(\"uInfo\");\n      if(think.isEmpty(uinfo)){\n          return this.redirect(\"/login.html\");\n      }else{\n        //查询是否已经注册过\n        let DB_userinfo=await this.model('home').findOne('user',{openid:uinfo.openid});\n        //未注册\n        if(think.isEmpty(DB_userinfo)){\n          this.assign(\"uinfo\",uinfo);\n          return this.displayView(\"login_complete\");\n        }else{\n          //已注册\n          uinfo.name=DB_userinfo.name;\n          return this.redirect(\"/personal/@\"+DB_userinfo.name);\n        }\n      }\n    }\n}\nfunction doRequest(url) {\n  var request = require('request');\n  return new Promise(function (resolve, reject) {\n    request(url, function (error, res, body) {\n      if (!error && res.statusCode == 200) {\n        resolve(body);\n      } else {\n        reject(error);\n      }\n    });\n  });\n}\n"
    ]
}