{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\common\\bootstrap\\global.js"
    ],
    "names": [
        "global",
        "liFormatDate",
        "formatStr",
        "newdate",
        "split",
        "replace",
        "totimestamp",
        "stringTime",
        "timestamp",
        "Date",
        "parse",
        "trimStr",
        "str",
        "getContent",
        "filePath",
        "fs",
        "require",
        "readFilePromise",
        "think",
        "promisify",
        "readFile",
        "formatDate",
        "fdate",
        "fTime",
        "fStr",
        "parseInt",
        "month",
        "getMonth",
        "date",
        "getDate",
        "hours",
        "getHours",
        "minutes",
        "getMinutes",
        "seconds",
        "getSeconds",
        "formatArr",
        "getFullYear",
        "toString",
        "i",
        "length",
        "charAt",
        "time",
        "getTime",
        "subStr",
        "len",
        "hasDot",
        "newLength",
        "newStr",
        "chineseRegex",
        "singleChar",
        "strLength",
        "match",
        "removeTag",
        "file",
        "data",
        "readFileSync",
        "writeFile",
        "err",
        "isNum",
        "s",
        "r",
        "re",
        "inArray",
        "arr"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\common\\bootstrap\\global.js",
    "sourcesContent": [
        "/**\n * this file will be loaded before server started\n * you can define global functions used in controllers, models, templates\n */\n\n/**\n * use global.xxx to define global functions\n *\n * global.fn1 = function(){\n *\n * }\n */\n'use strict';\n/*****项目函数库*******/\n\n// livi 日期格式化\nglobal.liFormatDate = function(formatStr) {\n    let newdate=formatStr.split(' ')[0].replace(/-/g, \"/\");\n    return newdate;\n};\n\nglobal.totimestamp=function(stringTime){\n  // var stringTime = \"2014-07-10 10:21:12\";\n    var timestamp = Date.parse(new Date(stringTime));\n        timestamp = timestamp / 1000;\n        return timestamp\n}\n\n//去掉首尾空格\nglobal.trimStr = function (str) {\n\treturn str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n};\n\nglobal.getContent = function(filePath){\n\tvar fs = require(\"fs\")\n\t//将readFile方法包装成Promise\n\tvar readFilePromise = think.promisify(fs.readFile, fs);\n\t//读取文件内容\n\treturn readFilePromise(filePath, \"utf8\");\n}\n//时间戳格式化\nglobal.formatDate = function(formatStr, fdate) {\n\t\tvar fTime, fStr = 'ymdhis';\n\t\tif (!formatStr) {\n\t\t\tformatStr = \"y-m-d h:i:s\";\n\t\t}\n\t\tif (fdate) {\n\t\t\tfTime = new Date(parseInt(fdate) * 1000); //10位数时间戳\n\t\t} else {\n\t\t\tfTime = new Date();\n\t\t}\n\t\tvar month=(fTime.getMonth()>8)?(fTime.getMonth() + 1):\"0\"+(fTime.getMonth() + 1);\n\t\tvar date=(fTime.getDate()>9)?fTime.getDate():\"0\"+fTime.getDate();\n\t\tvar hours=(fTime.getHours()>9)?fTime.getHours():\"0\"+fTime.getHours();\n\t\tvar minutes=(fTime.getMinutes()>9)?fTime.getMinutes():\"0\"+fTime.getMinutes();\n\t\tvar seconds=(fTime.getSeconds()>9)?fTime.getSeconds():\"0\"+fTime.getSeconds();\n\t\tvar formatArr = [\n\t\t\tfTime.getFullYear().toString(),\n\t\t\tmonth.toString(),\n\t\t\tdate.toString(),\n\t\t\thours.toString(),\n\t\t\tminutes.toString(),\n\t\t\tseconds.toString()\n\t\t]\n\t\tfor (var i = 0; i < formatArr.length; i++) {\n\t\t\tformatStr = formatStr.replace(fStr.charAt(i), formatArr[i]);\n\t\t}\n\t\treturn formatStr;\n\t}\n\t//获取10位数时间戳\nglobal.time = function(str) {\n\t\tvar date;\n\t\tif (str) {\n\t\t\tdate = new Date(Date.parse(str.replace(/-/g, \"/\")));\n\t\t\tdate = (date.getTime()) / 1000;\n\t\t} else {\n\t\t\tdate = (new Date().getTime()) / 1000\n\t\t}\n\n\t\treturn parseInt(date);\n\t}\n\t//中文字符串截取\nglobal.subStr = function(str, len, hasDot) {\n\t\tvar newLength = 0;\n\t\tvar newStr = \"\";\n\t\tvar chineseRegex = /[^\\x00-\\xff]/g;\n\t\tvar singleChar = \"\";\n\t\tvar strLength = str.replace(chineseRegex, \"**\").length;\n\t\tfor (var i = 0; i < strLength; i++) {\n\t\t\tsingleChar = str.charAt(i).toString();\n\t\t\tif (singleChar.match(chineseRegex) != null) {\n\t\t\t\tnewLength += 2;\n\t\t\t} else {\n\t\t\t\tnewLength++;\n\t\t\t}\n\t\t\tif (newLength > len) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnewStr += singleChar;\n\t\t}\n\n\t\tif (hasDot && strLength > len) {\n\t\t\tnewStr += \"...\";\n\t\t}\n\t\treturn newStr;\n\t}\n\t//过滤html标签\nglobal.removeTag = function(str) {\n\t\tstr = str.replace(/<\\/?[^>]*>/g, ''); //去除HTML tag\n\t\tstr = str.replace(/[ | ]*\\n/g, '\\n'); //去除行尾空白\n\t\t//str = str.replace(/\\n[\\s| | ]*\\r/g,'\\n'); //去除多余空行\n\t\tstr = str.replace(/&nbsp;/ig, ''); //去掉&nbsp;\n\t\tstr = str.replace(/ /ig, ''); //去掉\n\t\treturn str;\n\t}\n\t//读取文件\nglobal.readFile = function(file) {\n\t\tvar fs = think.require('fs'); //引入fs处理文件\n\t\tvar data = fs.readFileSync(file);\n\t\treturn data;\n\t}\n\t//写入文件\nglobal.writeFile = async function(file, data) {\n\t\tvar fs = think.require('fs'); //引入fs处理文件\n\t\tfs.writeFile(file, data, function(err) {\n\t\t\tif (err) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\t//去掉首尾空格\nglobal.trimStr = function(str) {\n\t\treturn str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n\t}\n\t//判断是否为数字\nglobal.isNum = function(s) {\n\t\tif (s != null) {\n\t\t\tvar r, re;\n\t\t\tre = /\\d*/i; //\\d表示数字,*表示匹配多个数字\n\t\t\tr = s.match(re);\n\t\t\treturn (r == s) ? true : false;\n\t\t}\n\t\treturn false;\n\t}\n\t//判断是否存在数组中\nglobal.inArray = function(arr, str) {\n\tvar i = arr.length;\n\twhile (i--) {\n\t\tif (arr[i] === str) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n"
    ]
}